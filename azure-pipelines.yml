trigger:
  batch: true
  branches:
    include:
    - master
    - dev

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'release'
  projects: 'src/**/*.csproj'

steps:
- task: NuGetToolInstaller@1
  displayName: 'Use Nuget'
  inputs:
    versionSpec: 
    checkLatest: true
- task: NuGetCommand@2
  displayName: 'restoring'
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'
- task: DotNetCoreCLI@2
  displayName: 'building'
  inputs:
    command: 'build'
    projects: $(projects)
    arguments: '-c $(buildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: 'testing'
  inputs:
    command: 'test'
    projects: '**/*.Tests.csproj'
- task: DotNetCoreCLI@2
  displayName: 'packing'
  condition: eq(variables['build.sourceBranch'], 'refs/heads/dev')
  inputs:
    command: 'custom'
    projects: $(projects)
    custom: 'pack'
    arguments: '-c $(buildConfiguration) --no-build -o $(Build.ArtifactStagingDirectory) --version-suffix dev$(Build.BuildNumber)'
- task: DotNetCoreCLI@2
  displayName: 'packing'
  condition: eq(variables['build.sourceBranch'], 'refs/heads/master')
  inputs:
    command: 'custom'
    projects: $(projects)
    custom: 'pack'
    arguments: '-c $(buildConfiguration) --no-build -o $(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'packages'
    publishLocation: 'Container'